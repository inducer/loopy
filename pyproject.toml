[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "loopy"
version = "2025.1"
description = "A code generator for array-based code on CPUs and GPUs"
readme = "README.rst"
license = "MIT"
authors = [
    { name = "Andreas Kloeckner", email = "inform@tiker.net" },
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Other Audience",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
]
dependencies = [
    "pytools>=2024.1.5",
    "pymbolic>=2024.2.2",
    "genpy>=2016.1.2",

    # https://github.com/inducer/loopy/pull/419
    "numpy>=1.19",

    "cgen>=2016.1",
    "islpy>=2019.1",
    "codepy>=2017.1",
    "colorama",
    "Mako",
    "constantdict",

    "typing-extensions>=4",
]
[project.optional-dependencies]
pyopencl = [
    "pyopencl>=2022.3",
]
fortran = [
    "fparser>=0.2.0",
    "ply>=3.6",
]

[dependency-groups]
dev = [
    # https://github.com/astral-sh/ruff/issues/16943
    "ruff!=0.11.1,!=0.11.2",
    "mypy",
    "types-colorama",
    "types-Pygments",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [
  "/.git*",
  "/doc/_build",
  "/run-*.sh",
]

[project.scripts]

[project.urls]
Documentation = "https://documen.tician.de/loopy"
Homepage = "https://github.com/inducer/loopy"

[tool.setuptools.package-dir]
# https://github.com/Infleqtion/client-superstaq/pull/715
"" = "."

[tool.ruff]
preview = true

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "E",   # pycodestyle
    "F",   # pyflakes

    "I",   # flake8-isort

    "N",   # pep8-naming
    "NPY", # numpy
    "Q",   # flake8-quotes
    "W",   # pycodestyle

    "UP",  # pyupgrade
    "RUF",  # ruff
    "FA",
    "TC",
]
extend-ignore = [
    "C90",  # McCabe complexity
    "E221", # multiple spaces before operator
    "E241", # multiple spaces after comma
    "E402", # module level import not at the top of file
    "E226", # missing whitespace around operator
    "N817", # CamelCase `SubstitutionRuleMappingContext` imported as acronym `SRMC`

    # FIXME
    "UP031", # .format instead of %s
    "UP032", # .format instead of %s
    "B905",  # zip without strict
    "UP035", # typing.Tuple
    "UP006", # typing.Tuple
    "UP007", # Union -> X|Y
]

[tool.ruff.lint.per-file-ignores]
"test/test_loopy.py" = ["B023"]
"loopy/target/c/compyte/ndarray/**/*.py" = ["Q", "B", "E", "F", "N", "C4"]
"loopy/frontend/fortran/translator.py" = ["N802", "B028"]
"proto-tests/*.py" = ["B"]
"contrib/**/*.py" = ["I002"]
"doc/conf.py" = ["I002"]
"*.ipynb" = ["I002"]
"examples/**/*.py" = ["I002"]
"proto-tests/**/*.py" = ["I002"]
"test/**/*.py" = ["I002"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = [
    "pytools",
    "pymbolic",
    "islpy",
    "pyopencl",
    "cgen",
    "genpy",
]
known-local-folder = [
    "loopy",
]
lines-after-imports = 2
required-imports = ["from __future__ import annotations"]

[tool.mypy]
python_version = "3.10"
warn_unused_ignores = true

# TODO
# check_untyped_defs = true

exclude = [
  "loopy/target/c/compyte/array.py",
]

[[tool.mypy.overrides]]
module = [
    "loopy.symbolic",
]
# check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "IPython.*",
    "fparser.*",
    "islpy.*",
    "mako.*",
    "ply.*",
    "pyopencl.*",
]
ignore_missing_imports = true

[tool.typos.default]
extend-ignore-re = [
  "(?Rm)^.*(#|//)\\s*spellchecker:\\s*disable-line$"
]

[tool.typos.default.extend-words]
# like the numpy function, array range
arange = "arange"
# N-Dimensional
ND = "ND"
# an element-wise slice of array u
ue = "ue"
# used in an ordering context, "ab" / "ba"
ba = "ba"
# Fortran Loopy
floopy = "floopy"

[tool.typos.files]
extend-exclude = [
  "loopy/target/c/compyte",
  "notes/*/*.eps",
]

[tool.pytest.ini_options]
addopts = "--ignore=proto-tests"


[tool.basedpyright]
reportImplicitStringConcatenation = "none"
reportUnnecessaryIsInstance = "none"
reportUnusedCallResult = "none"
reportExplicitAny = "none"
reportPrivateUsage = "none"

# Multiple reasons for this:
# - make_subst_func is reported as having an incomplete type (but only in CI?)
# - numpy scalar types are reported as incomplete (because of "any" precision)
reportUnknownVariableType = "none"

# This reports even cycles that are qualified by 'if TYPE_CHECKING'. Not what
# we care about at this moment.
# https://github.com/microsoft/pyright/issues/746
reportImportCycles = "none"

pythonVersion = "3.10"
pythonPlatform = "All"

exclude = [
    "proto-tests/*.py",
    "contrib/mem-pattern-explorer/*.py",
    "loopy/ipython_ext.py",
    "loopy/frontend/fortran/*.py",
]

[[tool.basedpyright.executionEnvironments]]
root = "test"
reportUnknownArgumentType = "none"
reportUnknownVariableType = "none"
reportMissingParameterType = "none"
reportAttributeAccessIssue = "none"
reportMissingImports = "none"

