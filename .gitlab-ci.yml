stages:
  - test
  - deploy

Pytest POCL:
  stage: test
  script:
  - export PYOPENCL_TEST=portable:pthread
  - export EXTRA_INSTALL="pybind11 numpy mako"
  - export LOOPY_NO_CACHE=1
  - curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/build-and-test-py-project.sh
  - ". ./build-and-test-py-project.sh"
  tags:
  - python3
  - pocl
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Pytest Nvidia Titan V:
  stage: test
  script:
  - export PYOPENCL_TEST=nvi:titan
  - export EXTRA_INSTALL="pybind11 numpy mako"
  - export LOOPY_NO_CACHE=1
  - source /opt/enable-intel-cl.sh
  - curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/build-and-test-py-project.sh
  - ". ./build-and-test-py-project.sh"
  tags:
  - python3
  - nvidia-titan-v
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Pytest POCL without arg check:
  stage: test
  script:
  - export PYOPENCL_TEST=portable:pthread
  - export EXTRA_INSTALL="pybind11 numpy mako"
  - export LOOPY_NO_CACHE=1
  - export _LOOPY_SKIP_ARG_CHECKS=1
  - curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/build-and-test-py-project.sh
  - ". ./build-and-test-py-project.sh"
  tags:
  - python3
  - pocl
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Pytest Intel:
  stage: test
  script:
  - export PYOPENCL_TEST=intel
  - export EXTRA_INSTALL="pybind11 numpy mako"
  - export LOOPY_NO_CACHE=1
  - export LOOPY_INTEL_CL_OK_FOR_TEST_REF=1
  - source /opt/enable-intel-cl.sh
  - curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/build-and-test-py-project.sh
  - ". ./build-and-test-py-project.sh"
  tags:
  - python3
  - intel-cl-cpu
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml


Pytest POCL Twice With Cache:
  stage: test
  script: |
    export PYOPENCL_TEST=portable:pthread
    export EXTRA_INSTALL="pybind11 numpy mako"
    curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/ci-support.sh
    . ./ci-support.sh
    build_py_project_in_venv
    ( test_py_project )
    ( test_py_project )
  tags:
  - python3
  - pocl
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml


# PyPy POCL:
#   script:
#   - export PY_EXE=pypy
#   - export PYOPENCL_TEST=portable:pthread
#   - export EXTRA_INSTALL="pybind11 numpy mako"
#   - curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/build-and-test-py-project.sh
#   - ". ./build-and-test-py-project.sh"
#   tags:
#   - pypy
#   - pocl
#   except:
#   - tags

Pytest POCL Examples:
  stage: test
  script: |
    export PYOPENCL_TEST=portable:pthread
    export EXTRA_INSTALL="pybind11 numpy mako"

    curl -L -O https://tiker.net/ci-support-v0
    . ./ci-support-v0
    build_py_project_in_venv
    rewrite_pyopencl_test

    . ./.ci/examples-funcs.sh
    install_example_prereqs
    run_py_examples
    run_ipynb_examples
    run_floopy_examples
  tags:
  - python3
  - pocl
  - large-node
  # For examples/python/ispc-stream-harness.py
  - avx2
  except:
  - tags

Pylint:
  stage: test
  script:
  # Needed to avoid name shadowing issues when running from source directory.
  - PROJECT_INSTALL_FLAGS="--editable"
  - EXTRA_INSTALL="pybind11 numpy mako matplotlib ipykernel ply fparser"
  - curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/prepare-and-run-pylint.sh
  - . ./prepare-and-run-pylint.sh "$CI_PROJECT_NAME" test/test_*.py
  tags:
  - python3
  except:
  - tags

Documentation:
  stage: deploy
  script: |
    EXTRA_INSTALL="pybind11 numpy"
    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    build_docs
    build_asv_html
    maybe_upload_docs
  tags:
  - python3

Flake8:
  stage: test
  script:
  - curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/prepare-and-run-flake8.sh
  - . ./prepare-and-run-flake8.sh "$CI_PROJECT_NAME" test examples
  tags:
  - python3
  except:
  - tags

Mypy:
  script: |
    EXTRA_INSTALL="pybind11 numpy"
    curl -L -O https://tiker.net/ci-support-v0
    . ./ci-support-v0
    build_py_project_in_venv
    python -m pip install mypy
    ./run-mypy.sh
  tags:
  - python3
  except:
  - tags

Benchmarks:
  stage: test
  script:
  - CONDA_ENVIRONMENT=.test-conda-env-py3.yml
  - PROJECT=loopy
  - PYOPENCL_TEST=portable:pthread
  - export LOOPY_NO_CACHE=1
  - export ASV_FACTOR=1.5
  - curl -L -O https://gitlab.tiker.net/inducer/ci-support/raw/main/build-and-benchmark-py-project.sh
  - ". ./build-and-benchmark-py-project.sh"
  tags:
  - linux
  - benchmark
  except:
  - tags

Downstream:
  parallel:
    matrix:
    - DOWNSTREAM_PROJECT: [meshmode, grudge, pytential, pytato]
  tags:
  - large-node
  - "docker-runner"
  script: |
    curl -L -O https://tiker.net/ci-support-v0
    . ./ci-support-v0
    test_downstream "$DOWNSTREAM_PROJECT"
